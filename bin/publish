#!/bin/bash
# Merge master from origin into gh-pages
# Optional argument $1: the commit message

set -e

# see http://stackoverflow.com/questions/3878624/how-do-i-programmatically-determine-if-there-are-uncommited-changes
require_clean_work_tree () {
    # Update the index
    git update-index -q --ignore-submodules --refresh
    err=0

    # Disallow unstaged changes in the working tree
    if ! git diff-files --quiet --ignore-submodules --
    then
        echo >&2 "cannot $1: you have unstaged changes."
        git diff-files --name-status -r --ignore-submodules -- >&2
        err=1
    fi

    # Disallow uncommitted changes in the index
    if ! git diff-index --cached --quiet HEAD --ignore-submodules --
    then
        echo >&2 "cannot $1: your index contains uncommitted changes."
        git diff-index --cached --name-status -r --ignore-submodules HEAD -- >&2
        err=1
    fi

    if [ $err = 1 ]
    then
        echo >&2 "Please commit or stash them."
        exit 1
    fi
}


require_clean_work_tree

git pull
gulp dist
jekyll build

FOLDER=.gh-pages

if [ ! -d ${FOLDER} ]; then
  git clone -b gh-pages git@github.com:ccoloma/web-codemotion-2015 ${FOLDER}
else
  cd ${FOLDER}
  git pull
  cd ..
fi

cd ${FOLDER}
git merge origin/master -m "Merge master"
git commit -m "${1:-Merge master}"
git push

cd ..
echo "Successfully uploaded" 
xdg-open http://codemotion.es &
                                   